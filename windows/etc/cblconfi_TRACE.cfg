FILE_TRACE           9
FILE_TRACE_FLUSH     1
FILE_TRACE_TIMESTAMP 0
A_TRACE 9

# Note that there is an upper limit of 32767, setting a larger number causes odd behavior.
# MAX_ERROR_LINES      32767

# This variable is used for debugging purposes and turns on paragraph tracing. 
# Set this variable to "1" (on, true, yes) to turn on paragraph tracing from within the configuration file or the COBOL program. 
# This is equivalent to the debugger "tp" command. 
# The COBOL program must be compiled with symbols ("-Gs", or anything that implies that option) to get any error output. 
# PARAGRAPH_TRACE      1

# You can also perform the following file tracing steps to determine where the runtime is searching for a license file, 
# and if found, which directory it is in. 
A_TRACE_LICENSE 1

# A Vision file trace may show what file is being written.
# V_TRACE 255

# ACU_MON_FILE   C:\temp\acumon.%d.%t.xml

# ACU_DUMP       1
# ACU_DUMP_FILE  C:\temp\acudump.%d.%p

# WARNINGS can take the following values:
# 0 (off, false, no) No warning is printed.
# 1 (on, true, yes) A warning is printed. This is the default.
# 2 A warning is printed or sent to the error file. If you are in the debugger, an automatic breakpoint occurs.
# 3 For a non-numeric error, a warning is printed, an intermediate error is generated that calls the installed error procedures, if any, 
# and the runtime is halted. For more information on error procedures, see CBL_ERROR_PROC in Appendix I. 
# WARNINGS 3

# Accepts values from 0 to 32767
# MAX_ERROR_LINES 0
